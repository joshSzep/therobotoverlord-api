# =============================================================================
# The Robot Overlord API Configuration
# =============================================================================

# -----------------------------------------------------------------------------
# Application Settings
# -----------------------------------------------------------------------------
APP_NAME=The Robot Overlord API
VERSION=0.1.0
DEBUG=false
HOST=0.0.0.0
PORT=8000
RELOAD=false

# CORS Settings
CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000"]

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
DATABASE_URL=postgresql://postgres:password@localhost:5432/therobotoverlord
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=password
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_DATABASE=therobotoverlord
DATABASE_SSL_MODE=prefer

# Connection Pool Settings
DATABASE_MIN_POOL_SIZE=5
DATABASE_MAX_POOL_SIZE=20
DATABASE_POOL_TIMEOUT=30.0

# Query Settings
DATABASE_QUERY_TIMEOUT=30.0
DATABASE_COMMAND_TIMEOUT=60.0

# Migration Settings
DATABASE_MIGRATION_TABLE=_yoyo_migration

# SSL Settings (optional)
DATABASE_SSL_REQUIRE=false
DATABASE_SSL_CERT_PATH=
DATABASE_SSL_KEY_PATH=
DATABASE_SSL_CA_PATH=

# -----------------------------------------------------------------------------
# Redis Configuration
# -----------------------------------------------------------------------------
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DATABASE=0
REDIS_PASSWORD=

# Connection Settings
REDIS_MAX_CONNECTIONS=20
REDIS_RETRY_ON_TIMEOUT=true
REDIS_SOCKET_TIMEOUT=5.0
REDIS_SOCKET_CONNECT_TIMEOUT=5.0

# SSL Settings (optional)
REDIS_SSL_ENABLED=false
REDIS_SSL_CERT_REQS=required
REDIS_SSL_CA_CERTS=
REDIS_SSL_CERTFILE=
REDIS_SSL_KEYFILE=

# -----------------------------------------------------------------------------
# Authentication Configuration
# -----------------------------------------------------------------------------
# Google OAuth
AUTH_GOOGLE_CLIENT_ID=your_google_client_id_here
AUTH_GOOGLE_CLIENT_SECRET=your_google_client_secret_here
AUTH_GOOGLE_REDIRECT_URI=http://localhost:8000/api/v1/auth/callback

# JWT Configuration
AUTH_JWT_SECRET_KEY=your_jwt_secret_key_here_make_it_long_and_secure
AUTH_JWT_ALGORITHM=HS256
AUTH_JWT_ISSUER=therobotoverlord-api
AUTH_JWT_AUDIENCE=therobotoverlord.com

# Token Lifetimes (in seconds)
AUTH_ACCESS_TOKEN_LIFETIME=3600
AUTH_ACCESS_TOKEN_MAX_LIFETIME=28800
AUTH_ACCESS_TOKEN_EXTENSION=1800
AUTH_REFRESH_TOKEN_LIFETIME=1209600

# Cookie Configuration
AUTH_COOKIE_DOMAIN=.therobotoverlord.com
AUTH_COOKIE_SECURE=true
AUTH_COOKIE_SAMESITE=lax

# Session Configuration
AUTH_SESSION_CLEANUP_INTERVAL=3600

# -----------------------------------------------------------------------------
# LLM Configuration (Multi-Provider Support)
# -----------------------------------------------------------------------------

# Default Provider and Model Configuration (used as fallback)
LLM_PROVIDER=anthropic
LLM_API_KEY=your_default_api_key_here
LLM_MODEL=claude-3-5-sonnet-20241022
LLM_MAX_TOKENS=1000
LLM_TEMPERATURE=0.7

# Provider-Specific API Keys
# Anthropic (Claude models)
LLM_ANTHROPIC_API_KEY=your_anthropic_api_key_here

# OpenAI (GPT models and OpenAI-compatible APIs)
LLM_OPENAI_API_KEY=your_openai_api_key_here

# Google (Gemini models)
LLM_GOOGLE_API_KEY=your_google_api_key_here
LLM_GOOGLE_PROJECT_ID=your_gcp_project_id_here
LLM_GOOGLE_LOCATION=us-central1

# Groq (Fast inference)
LLM_GROQ_API_KEY=your_groq_api_key_here

# Cohere
LLM_COHERE_API_KEY=your_cohere_api_key_here

# DeepSeek
LLM_DEEPSEEK_API_KEY=your_deepseek_api_key_here

# Azure OpenAI
LLM_AZURE_API_KEY=your_azure_openai_api_key_here
LLM_AZURE_ENDPOINT=https://your-resource.openai.azure.com/
LLM_AZURE_API_VERSION=2024-02-01

# AWS Bedrock
LLM_BEDROCK_ACCESS_KEY=your_aws_access_key_here
LLM_BEDROCK_SECRET_KEY=your_aws_secret_key_here
LLM_BEDROCK_REGION=us-east-1

# Agent-Specific Configuration
# Each agent can use a different provider and model

# Moderation Agent (content moderation and analysis)
# Options: anthropic, openai, google, groq, cohere, deepseek, azure, bedrock
LLM_MODERATION_PROVIDER=anthropic
LLM_MODERATION_MODEL=claude-3-5-haiku-20241022
LLM_MODERATION_MAX_TOKENS=800
LLM_MODERATION_TEMPERATURE=0.3

# ToS Screening Agent (terms of service violation detection)
LLM_TOS_PROVIDER=anthropic
LLM_TOS_MODEL=claude-3-5-haiku-20241022
LLM_TOS_MAX_TOKENS=500
LLM_TOS_TEMPERATURE=0.1

# Chat Agent (Robot Overlord personality responses)
LLM_CHAT_PROVIDER=anthropic
LLM_CHAT_MODEL=claude-3-5-sonnet-20241022
LLM_CHAT_MAX_TOKENS=1500
LLM_CHAT_TEMPERATURE=0.8

# Example Multi-Provider Configuration:
# Use OpenAI for moderation (fast and cost-effective)
# LLM_MODERATION_PROVIDER=openai
# LLM_MODERATION_MODEL=gpt-4o-mini

# Use Groq for ToS screening (very fast inference)
# LLM_TOS_PROVIDER=groq
# LLM_TOS_MODEL=llama-3.1-8b-instant

# Use Anthropic Claude for chat (high-quality responses)
# LLM_CHAT_PROVIDER=anthropic
# LLM_CHAT_MODEL=claude-3-5-sonnet-20241022

# General Settings
LLM_MODERATION_TIMEOUT=30.0
LLM_MAX_RETRIES=3
